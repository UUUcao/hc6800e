C51 COMPILER V7.10   LCD1602P1KEY                                                          09/02/2010 19:52:03 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE LCD1602P1KEY
OBJECT MODULE PLACED IN LCD1602P1Key.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD1602P1Key.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********************************************************************************
   2          *  描述:                                                                       *    
   3          *        矩阵键盘1602液晶显示键值                                              *    
   4          *   连接方法：JP8（P1） 与JP4（矩阵键盘接口） 连接                             *    
   5          *         矩阵键盘定义：                                                       *
   6          *         P1.1-P1.4为列线,P1.4-P1.7为行线                                      *    
   7          *         喇叭接P1.5口  矩阵键盘P1口，                                         *    
   8          *  注意：请将JP165短路冒断开                                                   *                          
             -  
   9          ********************************************************************************/
  10          
  11          
  12          #include <reg51.h>
  13          #include <intrins.h>
  14                                  
  15          #define uchar unsigned char
  16          #define uint  unsigned int
  17          
  18          uchar  dis_buf;            //显示缓存
  19          uchar  temp;
  20          uchar  key;                //键顺序吗
  21          void delay0(uchar x);      //x*0.14MS
  22          
  23          sbit LCD_RW = P2^5;
  24          sbit LCD_RS = P2^6;             
  25          sbit LCD_EN = P2^7;
  26          
  27          uchar cdis1[16] = {"  KEY NUMBER   "};
  28          uchar cdis2[16] = {"  KEY-CODE:   H "};
  29          
  30          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  31          
  32          /*************************************************************/
  33          /*                                                           */
  34          /* 延时子程序                                                */
  35          /*                                                           */
  36          /*************************************************************/
  37          
  38          void  delay(uchar x)
  39          { uchar j;
  40   1          while((x--)!=0)
  41   1          { for(j=0;j<125;j++)
  42   2               {;}
  43   2          }
  44   1      }
  45          
  46          /*************************************************************/
  47          /*                                                           */
  48          /*检查LCD忙状态                                              */
  49          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据  */
  50          /*                                                           */
  51          /*************************************************************/ 
  52          
  53          bit lcd_busy()
  54           {                          
C51 COMPILER V7.10   LCD1602P1KEY                                                          09/02/2010 19:52:03 PAGE 2   

  55   1          bit result;
  56   1          LCD_RS = 0;
  57   1          LCD_RW = 1;
  58   1          LCD_EN = 1;
  59   1          delayNOP();
  60   1          result = (bit)(P0&0x80);
  61   1          LCD_EN = 0;
  62   1          return(result); 
  63   1       }
  64          
  65          /*******************************************************************/
  66          /*                                                                 */
  67          /*写指令数据到LCD                                                  */
  68          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  69          /*                                                                 */
  70          /*******************************************************************/
  71          
  72          void lcd_wcmd(uchar cmd)
  73          
  74          {                          
  75   1         while(lcd_busy());
  76   1          LCD_RS = 0;
  77   1          LCD_RW = 0;
  78   1          LCD_EN = 0;
  79   1          _nop_();
  80   1          _nop_(); 
  81   1          P0 = cmd;
  82   1          delayNOP();
  83   1          LCD_EN = 1;
  84   1          delayNOP();
  85   1          LCD_EN = 0;  
  86   1      }
  87          
  88          /*******************************************************************/
  89          /*                                                                 */
  90          /*写显示数据到LCD                                                  */
  91          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
  92          /*                                                                 */
  93          /*******************************************************************/
  94          
  95          void lcd_wdat(uchar dat)
  96          {                          
  97   1         while(lcd_busy());
  98   1          LCD_RS = 1;
  99   1          LCD_RW = 0;
 100   1          LCD_EN = 0;
 101   1          P0 = dat;
 102   1          delayNOP();
 103   1          LCD_EN = 1;
 104   1          delayNOP();
 105   1          LCD_EN = 0; 
 106   1      }
 107          
 108          /*************************************************************/
 109          /*                                                           */
 110          /*  LCD初始化设定                                            */
 111          /*                                                           */
 112          /*************************************************************/
 113          
 114          void lcd_init()
 115          { 
 116   1          delay(15);                   
C51 COMPILER V7.10   LCD1602P1KEY                                                          09/02/2010 19:52:03 PAGE 3   

 117   1          lcd_wcmd(0x38);      //16*2显示，5*7点阵，8位数据
 118   1          delay(5);
 119   1          lcd_wcmd(0x38);         
 120   1          delay(5);
 121   1          lcd_wcmd(0x38);         
 122   1          delay(5);
 123   1      
 124   1          lcd_wcmd(0x0c);      //显示开，关光标
 125   1          delay(5);
 126   1          lcd_wcmd(0x06);      //移动光标
 127   1          delay(5);
 128   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 129   1          delay(5);
 130   1      }
 131          
 132          /*************************************************************/
 133          /*                                                           */
 134          /*  设定显示位置                                             */
 135          /*                                                           */
 136          /*************************************************************/
 137          
 138          void lcd_pos(uchar pos)
 139          {                          
 140   1        lcd_wcmd(pos | 0x80);  //数据指针=80+地址变量
 141   1      }
 142          
 143          /*************************************************************/
 144          /*                                                           */
 145          /* 键扫描子程序  (4*3 的矩阵) P1.4 P1.5 P1.6 P1.7为行        */
 146          /*                                                        P1.1 P1.2 P1.3为列             */
 147          /*                                                                                       */
 148          /*************************************************************/
 149          
 150           void  keyscan(void)
 151           {      temp = 0;
 152   1          P1=0xF0;                 //高四位输入   行为高电平  列为低电平
 153   1          delay(1);
 154   1              temp=P1;                 //读P1口 
 155   1          temp=temp&0xF0;                      //屏蔽低四位
 156   1          temp=~((temp>>4)|0xF0);       
 157   1          if(temp==1)   // p1.4 被拉低
 158   1              key=0;
 159   1          else if(temp==2)   // p1.5 被拉低
 160   1              key=1;
 161   1          else if(temp==4)   // p1.6 被拉低
 162   1              key=2;
 163   1          else if(temp==8)   // p1.7 被拉低
 164   1               key=3;
 165   1          else
 166   1              key=16;
 167   1              
 168   1          P1=0x0F;                //低四位输入  列为高电平 行为低电平
 169   1          delay(1);
 170   1              temp=P1;                //读P1口       
 171   1          temp=temp&0x0F;
 172   1          temp=~(temp|0xF0);
 173   1          if(temp==2)            // p1.1  被拉低
 174   1              key=key+0;
 175   1          else if(temp==4)   // p1.2  被拉低
 176   1              key=key+4;
 177   1          else if(temp==8)    // p1.3  被拉低
 178   1              key=key+8;
C51 COMPILER V7.10   LCD1602P1KEY                                                          09/02/2010 19:52:03 PAGE 4   

 179   1          else
 180   1              key=16;  
 181   1              
 182   1           dis_buf = key;                  //键值入显示缓存
 183   1           dis_buf = dis_buf & 0x0f;
 184   1       
 185   1               if(dis_buf>9)               //转换为ASCII码
 186   1            dis_buf = dis_buf+0x37;
 187   1           else
 188   1                dis_buf = dis_buf+0x30;
 189   1       }
 190          
 191          /*************************************************************/
 192          /*                                                           */
 193          /*判断键是否按下                                             */
 194          /*                                                           */
 195          /*************************************************************/
 196          
 197           void  keydown(void)
 198           {  
 199   1              P1=0xF0;
 200   1              if(P1!=0xF0)  //判断按键是否按下 如果按钮按下 会拉低P1其中的一个端口
 201   1              {
 202   2                keyscan();
 203   2          }
 204   1       }
 205          
 206          
 207          /*************************************************************/
 208          /*                                                           */
 209          /* 主程序                                                    */
 210          /*                                                           */
 211          /*************************************************************/ 
 212          main()
 213           {
 214   1          uchar m;
 215   1          P0=0xFF;                    //置P0口
 216   1          P1=0xFF;                    //置P1口  
 217   1          delay(10);                 //延时
 218   1          lcd_init();                //初始化LCD             
 219   1              
 220   1          lcd_pos(0);                //设置显示位置为第一行的第1个字符
 221   1           m = 0;
 222   1          while(cdis1[m] != '\0')
 223   1           {                         //显示字符
 224   2             lcd_wdat(cdis1[m]);
 225   2             m++;
 226   2           }
 227   1      
 228   1          lcd_pos(0x40);             //设置显示位置为第二行第1个字符
 229   1           m = 0;
 230   1          while(cdis2[m] != '\0')
 231   1           {
 232   2             lcd_wdat(cdis2[m]);      //显示字符
 233   2             m++;
 234   2           }       
 235   1                dis_buf = 0x2d;          //显示字符"-"
 236   1      
 237   1          while(1)
 238   1          { 
 239   2             keydown();
 240   2                 lcd_pos(0x4c);             
C51 COMPILER V7.10   LCD1602P1KEY                                                          09/02/2010 19:52:03 PAGE 5   

 241   2             lcd_wdat(dis_buf);        //第一位数显示   
 242   2          }
 243   1        }   
 244          
 245          /************************************************************/  
 246          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    384    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
