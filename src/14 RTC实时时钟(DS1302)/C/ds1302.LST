C51 COMPILER V7.10   DS1302                                                                04/03/2010 23:39:31 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ds1302.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ds1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************
   2          *  ±êÌâ:  ÊÔÑéÊýÂë¹ÜÏÔÊ¾Ê±ÖÓ                                                   *
   3          *                                                                                                                                                          *
   4          * Í¨¹ý±¾Àý³ÌÁË½â DS1302Ê±ÖÓÐ¾Æ¬µÄ»ù±¾Ô­ÀíºÍÊ¹ÓÃ ,Àí½â²¢ÕÆÎÕDS1302Ê±ÖÓÐ¾Æ¬          *
   5          * Çý¶¯³ÌÐòµÄ±àÐ´ÒÔ¼°ÊµÏÖÊý×Ö×Ö·ûÔÚÊýÂë¹ÜÖÐµÄÏÔÊ¾¡£                                                         *
   6          * ×¢Òâ£ºJP1302ÌøÏßÃ°Òª¶Ì½Ó¡£                                                   *
   7          * ÇëÑ§Ô±ÈÏÕæÏû»¯±¾Àý³Ì£¬¶®DS1302ÔÚCÓïÑÔÖÐµÄ²Ù×÷                                *
   8          ********************************************************************************/
   9          #include<reg52.h> //°üº¬Í·ÎÄ¼þ£¬Ò»°ãÇé¿ö²»ÐèÒª¸Ä¶¯£¬Í·ÎÄ¼þ°üº¬ÌØÊâ¹¦ÄÜ¼Ä´æÆ÷µÄ¶¨Òå
  10          #include <intrins.h>
  11          
  12          sbit SCK=P3^6;  //Ê±ÖÓ  
  13          sbit SDA=P3^4;  //Êý¾Ý  
  14          sbit RST = P3^5;// DS1302¸´Î»
  15          
  16          sbit LS138A=P2^2;  
  17          sbit LS138B=P2^3;
  18          sbit LS138C=P2^4; 
  19          
  20          bit ReadRTC_Flag;//¶¨Òå¶ÁDS1302±êÖ¾
  21          
  22          unsigned char l_tmpdate[7]={0,0,12,15,5,3,8};//Ãë·ÖÊ±ÈÕÔÂÖÜÄê08-05-15 12:00:00
  23          unsigned char l_tmpdisplay[8];
  24          
  25          code unsigned char write_rtc_address[7]={0x80,0x82,0x84,0x86,0x88,0x8a,0x8c}; //Ãë·ÖÊ±ÈÕÔÂÖÜÄê ×îµÍÎ»¶ÁÐ´Î
             -»
  26          code unsigned char read_rtc_address[7]={0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};  
  27          
  28          
  29          
  30          code unsigned char table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40}; 
  31                                           //¹²ÒõÊýÂë¹Ü 0-9  '-' 'Ï¨Ãð¡®±í
  32          
  33          /******************************************************************/
  34          /*                    º¯ÊýÉùÃ÷                                    */
  35          /******************************************************************/                                                                                            
  36          void Write_Ds1302_byte(unsigned char temp); 
  37          void Write_Ds1302( unsigned char address,unsigned char dat );
  38          unsigned char Read_Ds1302 ( unsigned char address );
  39          void Read_RTC(void);//read RTC 
  40          void Set_RTC(void); //set RTC 
  41          void InitTIMER0(void);//inital timer0
  42          /******************************************************************/
  43          /*                   Ö÷º¯Êý                                       */
  44          /******************************************************************/
  45          void main(void)    
  46          {
  47   1          InitTIMER0();          //³õÊ¼»¯¶¨Ê±Æ÷0
  48   1              Set_RTC();             //Ð´ÈëÊ±ÖÓÖµ£¬Èç¹ûÊ¹ÓÃ±¸ÓÃµç³ØÊ±ºò£¬²»ÐèÒªÃ»Ã¿´ÎÉÏµçÐ´Èë£¬´Ë³ÌÐòÓ¦¸ÃÆÁ±Î
  49   1      
  50   1              while(1)
  51   1              {
  52   2                if(ReadRTC_Flag)
  53   2                {
  54   3                  ReadRTC_Flag=0;
C51 COMPILER V7.10   DS1302                                                                04/03/2010 23:39:31 PAGE 2   

  55   3                      Read_RTC();
  56   3              
  57   3                              l_tmpdisplay[0]=l_tmpdate[2]/16;                        //Êý¾ÝµÄ×ª»»£¬ÒòÎÒÃÇ²ÉÓÃÊýÂë¹Ü0~9µÄÏÔÊ¾,½«Êý¾Ý·Ö¿ª
  58   3                              l_tmpdisplay[1]=l_tmpdate[2]&0x0f;
  59   3                              l_tmpdisplay[2]=10;                                             //¼ÓÈë"-"
  60   3                              l_tmpdisplay[3]=l_tmpdate[1]/16;
  61   3                              l_tmpdisplay[4]=l_tmpdate[1]&0x0f;
  62   3                              l_tmpdisplay[5]=10;
  63   3                              l_tmpdisplay[6]=l_tmpdate[0]/16;
  64   3                              l_tmpdisplay[7]=l_tmpdate[0]&0x0f;
  65   3              
  66   3               }
  67   2              }
  68   1      }
  69          /******************************************************************/
  70          /*                   ¶¨Ê±Æ÷0³õÊ¼»¯                                */
  71          /******************************************************************/
  72          void InitTIMER0(void)
  73          {
  74   1       TMOD|=0x01;//¶¨Ê±Æ÷ÉèÖÃ 16Î»
  75   1       TH0=0xef;//³õÊ¼»¯Öµ
  76   1       TL0=0xf0;
  77   1       ET0=1;
  78   1       TR0=1;
  79   1       EA=1;
  80   1      }
  81          
  82          
  83          /******************************************************************/
  84          /*                   Ð´Ò»¸ö×Ö½Ú                                   */
  85          /******************************************************************/
  86          void Write_Ds1302_Byte(unsigned  char temp) 
  87          {
  88   1       unsigned char i;
  89   1       for (i=0;i<8;i++)      //Ñ­»·8´Î Ð´ÈëÊý¾Ý
  90   1        { 
  91   2         SCK=0;
  92   2           SDA=temp&0x01;     //Ã¿´Î´«ÊäµÍ×Ö½Ú 
  93   2           temp>>=1;                  //ÓÒÒÆÒ»Î»
  94   2           SCK=1;
  95   2         }
  96   1      }   
  97          /******************************************************************/
  98          /*                  Ð´ÈëDS1302                                    */
  99          /******************************************************************/
 100          void Write_Ds1302( unsigned char address,unsigned char dat )     
 101          {
 102   1              RST=0;
 103   1              _nop_();
 104   1              SCK=0;
 105   1              _nop_();
 106   1              RST=1;  
 107   1              _nop_();                    //Æô¶¯
 108   1              Write_Ds1302_Byte(address);     //·¢ËÍµØÖ·
 109   1              Write_Ds1302_Byte(dat);         //·¢ËÍÊý¾Ý
 110   1              RST=0;                              //»Ö¸´
 111   1      }
 112          /******************************************************************/
 113          /*                   ¶Á³öDS1302Êý¾Ý                               */
 114          /******************************************************************/
 115          unsigned char Read_Ds1302 ( unsigned char address )
 116          {
C51 COMPILER V7.10   DS1302                                                                04/03/2010 23:39:31 PAGE 3   

 117   1              unsigned char i,temp=0x00;
 118   1              RST=0;
 119   1              _nop_();
 120   1              _nop_();
 121   1              SCK=0;
 122   1              _nop_();
 123   1              _nop_();
 124   1              RST=1;
 125   1              _nop_();
 126   1              _nop_();
 127   1              Write_Ds1302_Byte(address);
 128   1              for (i=0;i<8;i++)               //Ñ­»·8´Î ¶ÁÈ¡Êý¾Ý
 129   1              {               
 130   2                      if(SDA)
 131   2                      temp|=0x80;                     //Ã¿´Î´«ÊäµÍ×Ö½Ú
 132   2                      SCK=0;
 133   2                      temp>>=1;                       //ÓÒÒÆÒ»Î»
 134   2                      _nop_();
 135   2                 _nop_();
 136   2                 _nop_();
 137   2                      SCK=1;
 138   2              } 
 139   1              RST=0;
 140   1              _nop_();                        //ÒÔÏÂÎªDS1302¸´Î»µÄÎÈ¶¨Ê±¼ä
 141   1              _nop_();
 142   1              RST=0;
 143   1              SCK=0;
 144   1              _nop_();
 145   1              _nop_();
 146   1              _nop_();
 147   1              _nop_();
 148   1              SCK=1;
 149   1              _nop_();
 150   1              _nop_();
 151   1              SDA=0;
 152   1              _nop_();
 153   1              _nop_();
 154   1              SDA=1;
 155   1              _nop_();
 156   1              _nop_();
 157   1              return (temp);                  //·µ»Ø
 158   1      }
 159          /******************************************************************/
 160          /*                   ¶ÁÊ±ÖÓÊý¾Ý                                   */
 161          /******************************************************************/
 162          void Read_RTC(void)             //¶ÁÈ¡ ÈÕÀú
 163          {
 164   1       unsigned char i,*p;
 165   1       p=read_rtc_address;        //µØÖ·´«µÝ
 166   1       for(i=0;i<7;i++)                   //·Ö7´Î¶ÁÈ¡ Ãë·ÖÊ±ÈÕÔÂÖÜÄê
 167   1       {
 168   2        l_tmpdate[i]=Read_Ds1302(*p);
 169   2        p++;
 170   2       }
 171   1      }
 172          /******************************************************************/
 173          /*                  Éè¶¨Ê±ÖÓÊý¾Ý                                  */
 174          /******************************************************************/
 175          void Set_RTC(void)                  //Éè¶¨ ÈÕÀú
 176          {
 177   1              unsigned char i,*p,tmp;
 178   1              for(i=0;i<7;i++){       //BCD´¦Àí
C51 COMPILER V7.10   DS1302                                                                04/03/2010 23:39:31 PAGE 4   

 179   2                      tmp=l_tmpdate[i]/10;
 180   2                      l_tmpdate[i]=l_tmpdate[i]%10;
 181   2                      l_tmpdate[i]=l_tmpdate[i]+tmp*16;
 182   2              }  
 183   1              Write_Ds1302(0x8E,0X00);
 184   1              
 185   1              p=write_rtc_address;    //´«µØÖ·        
 186   1              for(i=0;i<7;i++)                //7´ÎÐ´Èë Ãë·ÖÊ±ÈÕÔÂÖÜÄê
 187   1              {
 188   2                        Write_Ds1302(*p,l_tmpdate[i]);
 189   2                       p++;  
 190   2               }
 191   1               Write_Ds1302(0x8E,0x80);
 192   1      }
 193          /******************************************************************/
 194          /*                   ¶¨Ê±Æ÷ÖÐ¶Ïº¯Êý                               */
 195          /******************************************************************/
 196          void tim(void) interrupt 1 using 1
 197                                      //ÖÐ¶Ï£¬ÓÃÓÚÊýÂë¹ÜÉ¨Ãè
 198          {
 199   1      
 200   1          static unsigned char i,num;
 201   1          TH0=0xf5;
 202   1          TL0=0xe0;
 203   1      
 204   1              P0=table[l_tmpdisplay[i]];              //²é±í·¨µÃµ½ÒªÏÔÊ¾Êý×ÖµÄÊýÂë¶Î
 205   1      
 206   1          switch(i)                                     
 207   1                   {      
 208   2                              case 0:LS138A=0; LS138B=0; LS138C=0; break;         
 209   2                      case 1:LS138A=1; LS138B=0; LS138C=0; break;                     
 210   2                      case 2:LS138A=0; LS138B=1; LS138C=0; break; 
 211   2                      case 3:LS138A=1; LS138B=1; LS138C=0; break; 
 212   2                              case 4:LS138A=0; LS138B=0; LS138C=1; break;
 213   2                              case 5:LS138A=1; LS138B=0; LS138C=1; break;
 214   2                              case 6:LS138A=0; LS138B=1; LS138C=1; break;
 215   2                              case 7:LS138A=1; LS138B=1; LS138C=1; break;
 216   2                              
 217   2                   }
 218   1              i++;
 219   1              if(i==8)
 220   1                {
 221   2                 i=0;
 222   2                 num++;
 223   2                 if(10==num)       //¸ô¶ÎÊ±¼ä¶ÁÈ¡1302µÄÊý¾Ý¡£Ê±¼ä¼ä¸ô¿ÉÒÔµ÷Õû
 224   2                   {
 225   3                       ReadRTC_Flag=1; //Ê¹ÓÃ±êÖ¾Î»ÅÐ¶Ï
 226   3                       num=0;
 227   3                       }
 228   2                }
 229   1       }
 230          
 231          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    442    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V7.10   DS1302                                                                04/03/2010 23:39:31 PAGE 5   

   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
