C51 COMPILER V7.10   IRLCD                                                                 05/13/2010 14:45:36 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE IRLCD
OBJECT MODULE PLACED IN IRLCD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IRLCD.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          /********************************************************************************
   3          *  描述:                                                                       *
   4          *          lcd1602显示 遥控键值读取器                                          *
   5          *         lcd1602显示 遥控器接p3.2                                             *
   6          *          喇叭接p1.5  继电器接p1.4                                            *
   7          *         17(40h)键按下，继电器吸合。19(04h)键按下，继电器关闭。               *
   8          *       连接方法：使用红外功能时 J1跳线短接                                                               
             -           *
   9          ********************************************************************************/
  10          
  11          #include <reg51.h>
  12          #include <intrins.h>
  13          
  14          #define uchar unsigned char
  15          #define uint  unsigned int
  16          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  17          
  18          void delay(uchar x);  //x*0.14MS
  19          void delay1(int ms);
  20          void beep();
  21          
  22          sbit IRIN = P3^2;         //红外接收器数据线
  23          sbit BEEP = P1^5;         //蜂鸣器驱动线
  24          sbit RELAY= P1^4;         //继电器驱动线
  25          
  26          uchar IRCOM[7];
  27          
  28          sbit LCD_RS = P2^6;             
  29          sbit LCD_RW = P2^5;
  30          sbit LCD_EN = P2^7;
  31          
  32          uchar code  cdis1[ ] = {" Red Control "};
  33          uchar code  cdis2[ ] = {"  IR-CODE: --H  "};
  34          
  35          /*******************************************************************/
  36          /*                                                                 */
  37          /*检查LCD忙状态                                                    */
  38          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
  39          /*                                                                 */
  40          /*******************************************************************/ 
  41          
  42          bit lcd_busy()
  43           {                          
  44   1          bit result;
  45   1          LCD_RS = 0;
  46   1          LCD_RW = 1;
  47   1          LCD_EN = 1;
  48   1          delayNOP();
  49   1          result = (bit)(P0&0x80);
  50   1          LCD_EN = 0;
  51   1          return(result); 
  52   1       }
  53          
  54          /*******************************************************************/
C51 COMPILER V7.10   IRLCD                                                                 05/13/2010 14:45:36 PAGE 2   

  55          /*                                                                 */
  56          /*写指令数据到LCD                                                  */
  57          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  58          /*                                                                 */
  59          /*******************************************************************/
  60          
  61          void lcd_wcmd(uchar cmd)
  62          
  63          {                          
  64   1         while(lcd_busy());
  65   1          LCD_RS = 0;
  66   1          LCD_RW = 0;
  67   1          LCD_EN = 0;
  68   1          _nop_();
  69   1          _nop_(); 
  70   1          P0 = cmd;
  71   1          delayNOP();
  72   1          LCD_EN = 1;
  73   1          delayNOP();
  74   1          LCD_EN = 0;  
  75   1      }
  76          
  77          /*******************************************************************/
  78          /*                                                                 */
  79          /*写显示数据到LCD                                                  */
  80          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
  81          /*                                                                 */
  82          /*******************************************************************/
  83          
  84          void lcd_wdat(uchar dat)
  85          {                          
  86   1         while(lcd_busy());
  87   1          LCD_RS = 1;
  88   1          LCD_RW = 0;
  89   1          LCD_EN = 0;
  90   1          P0 = dat;
  91   1          delayNOP();
  92   1          LCD_EN = 1;
  93   1          delayNOP();
  94   1          LCD_EN = 0; 
  95   1      }
  96          
  97          /*******************************************************************/
  98          /*                                                                 */
  99          /*  LCD初始化设定                                                  */
 100          /*                                                                 */
 101          /*******************************************************************/
 102          
 103          void lcd_init()
 104          { 
 105   1          delay1(15);                   
 106   1          lcd_wcmd(0x38);      //16*2显示，5*7点阵，8位数据
 107   1          delay1(5);
 108   1          lcd_wcmd(0x38);         
 109   1          delay1(5);
 110   1          lcd_wcmd(0x38);         
 111   1          delay1(5);
 112   1      
 113   1          lcd_wcmd(0x0c);      //显示开，关光标
 114   1          delay1(5);
 115   1          lcd_wcmd(0x06);      //移动光标
 116   1          delay1(5);
C51 COMPILER V7.10   IRLCD                                                                 05/13/2010 14:45:36 PAGE 3   

 117   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 118   1          delay1(5);
 119   1      }
 120          
 121          /*******************************************************************/
 122          /*                                                                 */
 123          /*  设定显示位置                                                   */
 124          /*                                                                 */
 125          /*******************************************************************/
 126          
 127          void lcd_pos(uchar pos)
 128          {                          
 129   1        lcd_wcmd(pos | 0x80);  //数据指针=80+地址变量
 130   1      }
 131          
 132          /*******************************************************************/
 133          main()
 134          {
 135   1         uchar m;
 136   1          
 137   1          IRIN=1;                    //I/O口初始化
 138   1          BEEP=1;
 139   1          RELAY=1; 
 140   1              
 141   1          delay1(10);                 //延时
 142   1          lcd_init();                //初始化LCD             
 143   1              
 144   1          lcd_pos(0);                //设置显示位置为第一行的第1个字符
 145   1      
 146   1           m = 0;
 147   1          while(cdis1[m] != '\0')
 148   1           {                         //显示字符
 149   2             lcd_wdat(cdis1[m]);
 150   2             m++;
 151   2           }
 152   1      
 153   1          lcd_pos(0x40);             //设置显示位置为第二行第1个字符
 154   1           m = 0;
 155   1          while(cdis2[m] != '\0')
 156   1           {
 157   2             lcd_wdat(cdis2[m]);      //显示字符
 158   2             m++;
 159   2           }
 160   1      
 161   1      
 162   1              IE = 0x81;                 //允许总中断中断,使能 INT0 外部中断
 163   1              TCON = 0x01;               //触发方式为脉冲负边沿触发
 164   1      
 165   1         while(1)     ;
 166   1      
 167   1      } //end main
 168          /**********************************************************/
 169          void IR_IN() interrupt 0 using 0
 170          {
 171   1        unsigned char j,k,N=0;
 172   1           EX0 = 0;   
 173   1               delay(15);
 174   1               if (IRIN==1) 
 175   1           { EX0 =1;
 176   2                 return;
 177   2                } 
 178   1                                 //确认IR信号出现
C51 COMPILER V7.10   IRLCD                                                                 05/13/2010 14:45:36 PAGE 4   

 179   1        while (!IRIN)            //等IR变为高电平，跳过9ms的前导低电平信号。
 180   1          {delay(1);}
 181   1      
 182   1       for (j=0;j<4;j++)         //收集四组数据
 183   1       { 
 184   2        for (k=0;k<8;k++)        //每组数据有8位
 185   2        {
 186   3         while (IRIN)            //等 IR 变为低电平，跳过4.5ms的前导高电平信号。
 187   3           {delay(1);}
 188   3          while (!IRIN)          //等 IR 变为高电平
 189   3           {delay(1);}
 190   3           while (IRIN)           //计算IR高电平时长
 191   3            {
 192   4          delay(1);
 193   4          N++;           
 194   4          if (N>=30)
 195   4               { EX0=1;
 196   5               return;}                  //0.14ms计数过长自动离开。
 197   4            }                        //高电平计数完毕                
 198   3           IRCOM[j]=IRCOM[j] >> 1;                  //数据最高位补“0”
 199   3           if (N>=8) {IRCOM[j] = IRCOM[j] | 0x80;}  //数据最高位补“1”
 200   3           N=0;
 201   3        }//end for k
 202   2       }//end for j
 203   1         
 204   1         if (IRCOM[2]!=~IRCOM[3])
 205   1         { EX0=1;
 206   2           return; }
 207   1      
 208   1         IRCOM[5]=IRCOM[2] & 0x0F;     //取键码的低四位
 209   1         IRCOM[6]=IRCOM[2] >> 4;       //右移4次，高四位变为低四位
 210   1      
 211   1         if(IRCOM[5]>9)
 212   1          { IRCOM[5]=IRCOM[5]+0x37;}
 213   1         else
 214   1                IRCOM[5]=IRCOM[5]+0x30;
 215   1      
 216   1         if(IRCOM[6]>9)
 217   1          { IRCOM[6]=IRCOM[6]+0x37;}
 218   1         else
 219   1                IRCOM[6]=IRCOM[6]+0x30;
 220   1      
 221   1           lcd_pos(0x4b);             
 222   1           lcd_wdat(IRCOM[6]);        //第一位数显示 
 223   1           lcd_pos(0x4c);             
 224   1           lcd_wdat(IRCOM[5]);        //第二位数显示
 225   1      
 226   1           beep();
 227   1           EX0 = 1; 
 228   1      } 
 229          
 230          /**********************************************************/
 231          void beep()
 232          {
 233   1        unsigned char i;
 234   1        for (i=0;i<100;i++)
 235   1         {
 236   2         delay(4);
 237   2         BEEP=!BEEP;                 //BEEP取反
 238   2         } 
 239   1        BEEP=1;                      //关闭蜂鸣器
 240   1      }
C51 COMPILER V7.10   IRLCD                                                                 05/13/2010 14:45:36 PAGE 5   

 241          /**********************************************************/
 242          void delay(unsigned char x)    //x*0.14MS
 243          {
 244   1       unsigned char i;
 245   1        while(x--)
 246   1       {
 247   2        for (i = 0; i<13; i++) {}
 248   2       }
 249   1      }
 250          
 251          /**********************************************************/
 252          void delay1(int ms)
 253          {
 254   1       unsigned char y;
 255   1        while(ms--)
 256   1       {
 257   2        for(y = 0; y<250; y++)
 258   2        {
 259   3         _nop_();
 260   3         _nop_();
 261   3         _nop_();
 262   3         _nop_();
 263   3        }
 264   2       }
 265   1      }
 266          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    513    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
