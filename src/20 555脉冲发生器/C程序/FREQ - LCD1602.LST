C51 COMPILER V7.10   FREQ___LCD1602                                                        07/25/2010 10:47:04 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE FREQ___LCD1602
OBJECT MODULE PLACED IN FREQ - LCD1602.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE FREQ - LCD1602.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************
   2           *                                                                  *
   3           *         555定时器试验 -―― 频率计                               *
   4           *                                                                  *
   5           *                                                                  *
   6           * LCD1602显示                                                      *
   7           *改变VR1电位器的电阻值，观察液晶屏频率发生变化                                         *
   8           *                                                                  *
   9           *******************************************************************/
  10          
  11          #include <reg52.h>
  12          #include <intrins.h>
  13          
  14          
  15          unsigned char code cdis1[] =
  16          {
  17            "    CYMOMETER   "
  18          };
  19          unsigned char code cdis2[] =
  20          {
  21            "FREQ:        Hz "
  22          };
  23          
  24          sbit LCD_RS = P2 ^ 6;
  25          sbit LCD_RW = P2 ^ 5;
  26          sbit LCD_EN = P2 ^ 7;
  27          
  28          bit sec = 0;
  29          unsigned char msec = 0, Hdata = 0, Ldata = 0, Count = 0;
  30          unsigned long temp = 0;
  31          unsigned char data display[] =
  32          {
  33            0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  34          };
  35          
  36          char code reserve[3]_at_ 0x3b; //保留0x3b开始的3个字节
  37          
  38          /*********************************************************
  39          
  40          us延时函数   (4.34us)
  41          
  42           *********************************************************/
  43          void delayNOP()
  44          {
  45   1        _nop_();
  46   1        _nop_();
  47   1        _nop_();
  48   1        _nop_();
  49   1      }
  50          
  51          /*********************************************************
  52          
  53          ms延时函数
  54          
  55           *********************************************************/
C51 COMPILER V7.10   FREQ___LCD1602                                                        07/25/2010 10:47:04 PAGE 2   

  56          void delayms(unsigned int ms)
  57          {
  58   1        unsigned char n;
  59   1        while (ms--)
  60   1        {
  61   2          for (n = 0; n < 114; n++)
  62   2            ;
  63   2        }
  64   1      }
  65          
  66          /**********************************************************
  67           *                                                         *
  68           * 检查LCD忙状态                                           *
  69           * lcd_busy为1时，忙，等待。                               *
  70           * lcd-busy为0时,闲，可写指令与数据。                      *
  71           *                                                         *
  72           **********************************************************/
  73          bit lcd_busy()
  74          {
  75   1        bit result;
  76   1        LCD_RS = 0;
  77   1        LCD_RW = 1;
  78   1        LCD_EN = 1;
  79   1        delayNOP();
  80   1        result = (bit)(P0 &0x80);
  81   1        LCD_EN = 0;
  82   1        return (result);
  83   1      }
  84          
  85          /**********************************************************
  86           *                                                         *
  87           *写指令数据到LCD                                          *
  88           *RS=L，RW=L，E=高脉冲，D0-D7=指令码。                     *
  89           *                                                         *
  90           **********************************************************/
  91          void lcd_wcmd(unsigned char cmd)
  92          {
  93   1        while (lcd_busy())
  94   1          ;
  95   1        LCD_RS = 0;
  96   1        LCD_RW = 0;
  97   1        LCD_EN = 1;
  98   1        P0 = cmd;
  99   1        delayNOP();
 100   1        LCD_EN = 0;
 101   1      }
 102          
 103          /**********************************************************
 104           *                                                         *
 105           *写显示数据到LCD                                          *
 106           *RS=H，RW=L，E=高脉冲，D0-D7=数据。                       *
 107           *                                                         *
 108           **********************************************************/
 109          void lcd_wdat(unsigned char dat)
 110          {
 111   1        while (lcd_busy())
 112   1          ;
 113   1        LCD_RS = 1;
 114   1        LCD_RW = 0;
 115   1        LCD_EN = 1;
 116   1        P0 = dat;
 117   1        delayNOP();
C51 COMPILER V7.10   FREQ___LCD1602                                                        07/25/2010 10:47:04 PAGE 3   

 118   1        LCD_EN = 0;
 119   1      }
 120          
 121          /**********************************************************
 122           *                                                         *
 123           *  LCD初始化设定                                          *
 124           *                                                         *
 125           **********************************************************/
 126          void lcd_init()
 127          {
 128   1        delayms(15);
 129   1      
 130   1        lcd_wcmd(0x38); //16*2显示，5*7点阵，8位数据
 131   1        delayms(5);
 132   1        lcd_wcmd(0x38);
 133   1        delayms(5);
 134   1        lcd_wcmd(0x38);
 135   1        delayms(5);
 136   1      
 137   1        lcd_wcmd(0x0c); //开显示，不显示光标
 138   1        delayms(5);
 139   1        lcd_wcmd(0x06); //
 140   1        delayms(5);
 141   1        lcd_wcmd(0x01); //清除LCD的显示内容
 142   1        delayms(5);
 143   1      }
 144          
 145          /**********************************************************
 146           *                                                         *
 147           *  设定显示位置                                           *
 148           *                                                         *
 149           **********************************************************/
 150          
 151          void lcd_pos(unsigned char pos)
 152          {
 153   1        lcd_wcmd(pos | 0x80); //数据指针=80+地址变量
 154   1      }
 155          
 156          /**********************************************************
 157           *                                                         *
 158           * 显示函数                                                *
 159           *                                                         *
 160           **********************************************************/
 161          void play()
 162          {
 163   1        unsigned char n;
 164   1      
 165   1        for (n = 0; n <= 4; n++)
 166   1        //数据转换
 167   1        {
 168   2          display[n] = temp % 10+0x30;
 169   2          temp = temp / 10;
 170   2        }
 171   1        display[5] = temp + 0x30;
 172   1      
 173   1        for (n = 5; n > 0; n--)
 174   1        //高位为"0"不显示
 175   1        {
 176   2          if (display[n] == 0x30)
 177   2            display[n] = 0x20;
 178   2          else
 179   2            break;
C51 COMPILER V7.10   FREQ___LCD1602                                                        07/25/2010 10:47:04 PAGE 4   

 180   2        }
 181   1      
 182   1        lcd_pos(0x46); //显示实际频率值
 183   1        for (n = 5; n != 0xff; n--)
 184   1          lcd_wdat(display[n]);
 185   1      }
 186          
 187          /*********************************************************
 188           *                                                        *
 189           * 主函数                                                 *
 190           *                                                        *
 191           *********************************************************/
 192          void main()
 193          {
 194   1        unsigned char m;
 195   1        unsigned long frq_num;
 196   1      
 197   1        P3 = 0xff;
 198   1      
 199   1        lcd_init();
 200   1        lcd_pos(0x00); //设置显示位置为第一行
 201   1        for (m = 0; m < 16; m++)
 202   1          lcd_wdat(cdis1[m]);
 203   1        //显示字符
 204   1        lcd_pos(0x40); //设置显示位置为第二行
 205   1        for (m = 0; m < 16; m++)
 206   1          lcd_wdat(cdis2[m]);
 207   1        //显示字符
 208   1      
 209   1        TMOD = 0x51; //定时器0工作在定时方式
 210   1        //定时器1工作在计数方式
 211   1        TH0 = 0x4c; //50ms定时
 212   1        TL0 = 0x00;
 213   1        TH1 = 0x00; //计数初值
 214   1        TL1 = 0x00;
 215   1        ET0 = 1; //使能TIMER0中断
 216   1        ET1 = 1; //使能TIMER1中断
 217   1        EA = 1; //允许中断
 218   1        PT1 = 1; //定义TIMER1中断优先
 219   1        TR0 = 1;
 220   1        TR1 = 1;
 221   1      
 222   1        while (1)
 223   1        {
 224   2          if (sec)
 225   2          {
 226   3            Hdata = TH1; //取计数值
 227   3            Ldata = TL1;
 228   3            frq_num = ((Count *65535+Hdata * 256+Ldata) *108 / 100);
 229   3            TH1 = 0;
 230   3            TL1 = 0;
 231   3            sec = 0;
 232   3            Count = 0;
 233   3            TR1 = 1;
 234   3            TR0 = 1;
 235   3          }
 236   2          temp = frq_num;
 237   2          play();
 238   2        }
 239   1      }
 240          
 241          /**********************************************************
C51 COMPILER V7.10   FREQ___LCD1602                                                        07/25/2010 10:47:04 PAGE 5   

 242           *                                                         *
 243           * Time0中断函数                                           *
 244           *                                                         *
 245           **********************************************************/
 246          void Time0()interrupt 1
 247          {
 248   1        TH0 = 0x4c; //50ms定时
 249   1        TL0 = 0x00;
 250   1        msec++;
 251   1        if (msec == 20)
 252   1        //50*20=1S
 253   1        {
 254   2          TR0 = 0; //关闭TIMER0
 255   2          TR1 = 0; //关闭TIMER1
 256   2          msec = 0;
 257   2          sec = 1; //置秒标记位
 258   2        }
 259   1      }
 260          
 261          /**********************************************************
 262           *                                                         *
 263           * Time1中断函数                                           *
 264           *                                                         *
 265           **********************************************************/
 266          void Time1()interrupt 3
 267          {
 268   1        Count++;
 269   1      }
 270          
 271          /*********************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    486    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
